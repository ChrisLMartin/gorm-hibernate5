group "examples"


configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if(details.requested.group == 'org.grails' &&
                details.requested.name.startsWith('grails-datastore') &&
                details.requested.name != 'grails-datastore-gorm-hibernate5') {
            details.useVersion(gormVersion)
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "javax.servlet:javax.servlet-api:$servletApiVersion"
    compile "org.grails:grails-core:$grailsVersion"
    compile "org.grails:grails-dependencies:$grailsVersion", {
        exclude module:'grails-datastore-simple'
    }

    compile "org.grails:grails-web-boot:$grailsVersion"
    compile project(":grails-plugin")

    compile "org.hibernate:hibernate-core:$hibernate5Version"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc:$tomcatVersion"
    runtime "org.grails.plugins:fields:$fieldsVersion"
    runtime "org.grails.plugins:scaffolding:$scaffoldingVersion"

    testCompile "org.grails:grails-gorm-testing-support:$testingSupportVersion"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}
webdriverBinaries {
    chromedriver "$chromeDriverVersion"
    geckodriver "$geckodriverVersion"
}
tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}

apply from: "${rootProject.projectDir}/gradle/testVerbose.gradle"
